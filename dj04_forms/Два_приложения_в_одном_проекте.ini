
Чтобы настроить два приложения в одном проекте Django так, чтобы они работали независимо и могли быть запущены на одном сервере, вам необходимо выполнить несколько шагов. Вот общие рекомендации по настройке:

### 1. Создание проекта и приложений

Предположим, что у вас уже есть проект `topic10` и два приложения: `dj01_creating_project` и `dj02_creating_app`. Если это не так, вы можете создать их с помощью следующих команд:

```bash
django-admin startproject topic10
cd topic10
django-admin startapp dj01_creating_project
django-admin startapp dj02_creating_app
```

### 2. Настройка `settings.py`

Вам нужно убедиться, что оба приложения добавлены в список `INSTALLED_APPS`. Откройте файл `settings.py` вашего проекта `topic10` и добавьте ваши приложения:

```python
# topic10/settings.py

INSTALLED_APPS = [
    ...
    'dj01_creating_project',
    'dj02_creating_app',
    ...
]
```

### 3. Настройка URL

Далее вам нужно настроить маршрутизацию (URLs) для каждого приложения. Вы можете создать отдельные файлы `urls.py` для каждого приложения, чтобы сделать их независимыми.

#### Создание `urls.py` в каждом приложении

1. **Для `dj01_creating_project`**:

```python
# dj01_creating_project/urls.py

from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
]
```

2. **Для `dj02_creating_app`**:

```python
# dj02_creating_app/urls.py

from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
]
```

#### Подключение URL-адресов в `urls.py` проекта

Теперь вам нужно подключить эти URL в основном `urls.py` вашего проекта:

```python
# topic10/urls.py

from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('admin/', admin.site.urls),
    path('app1/', include('dj01_creating_project.urls')),  # подключение первого приложения
    path('app2/', include('dj02_creating_app.urls')),      # подключение второго приложения
]
```

### 4. Создание представлений (views)

Убедитесь, что у вас есть представления для каждого приложения. Например:

```python
# dj01_creating_project/views.py

from django.http import HttpResponse

def index(request):
    return HttpResponse("Hello from dj01_creating_project!")
```

```python
# dj02_creating_app/views.py

from django.http import HttpResponse

def index(request):
    return HttpResponse("Hello from dj02_creating_app!")
```

### 5. Запуск сервера

Теперь, когда всё настроено, вы можете запустить сервер с помощью команды:

```bash
python manage.py runserver
```

### 6. Проверка работы

Вы можете проверить работу каждого приложения, перейдя по следующим URL в вашем браузере:

- Для `dj01_creating_project`: `http://127.0.0.1:8000/app1/`
- Для `dj02_creating_app`: `http://127.0.0.1:8000/app2/`

### Заключение

Теперь оба приложения работают независимо в рамках одного проекта Django. Вы можете добавлять свои представления, модели и миграции в каждое приложение без влияния на другое.